function [zR, aR] = vac_path_old(dn, sf, sz, R)
% beam path calculation by ABCD ray transfer matrix before 2015 campaign
% input = focus and zoom lens position in the log [mm]
% output = vertical beam position and angle at R = 2.32 [m], 
% ex) 10028, 2T, / LensFocus : 510.0 | 410.0 | 1600.0 / LensZoom : 340.0 | 340.0 | 960.0
% dn = 3;
% sf = 1600;
% sz = 960; 

fprintf('Calculate vacuum ECE path BEFORE 2015 campaign \n');
fprintf('device number : %d, focus lens position : %d [mm], zoom lens position : %d [mm] \n', dn, sf, sz);

% will find an beam angle at R = 2.32 m
R = R*1000; % [m] -> [mm]
% for R = [1600:50:2300]
if dn == 1 % LFS
    sp = 3350 - R; 
elseif dn == 2 % HFS
    sp = 3350 - R; 
elseif dn == 3 % GFS
    sp = 3150 - R; 
end

% ABCD matrix for LFS, HFS, GFS
if dn == 1
    ABCD = [[1,250+sp];[0,1]]* ...
           [[1,0];[(1.52-1)/(-730),1.52]]* ...
           [[1,135];[0,1]]* ...
           [[1,0];[(1-1.52)/(2700*1.52),1/1.52]]* ...
           [[1,1265-sz];[0,1]]* ...
           [[1,0];[(1.52-1)/1100,1.52]]* ...
           [[1,40];[0,1]]* ...
           [[1,0];[(1-1.52)/(-1100*1.52),1/1.52]]* ...
           [[1,sz];[0,1]]* ...
           [[1,0];[0,1.52]]* ...
           [[1,65];[0,1]]* ...
           [[1,0];[(1-1.52)/(800*1.52),1/1.52]]* ...
           [[1,710-sf+140];[0,1]]* ...
           [[1,0];[(1.52-1)/(-1270),1.52]]* ...
           [[1,90];[0,1]]* ...
           [[1,0];[(1-1.52)/(1270*1.52),1/1.52]]* ...
           [[1,539+35+sf];[0,1]];
elseif dn == 2
    ABCD = [[1,250+sp];[0,1]]* ...
           [[1,0];[(1.52-1)/(-730),1.52]]* ...
           [[1,135];[0,1]]* ...
           [[1,0];[(1-1.52)/(2700*1.52),1/1.52]]* ...
           [[1,1265-sz];[0,1]]* ...
           [[1,0];[(1.52-1)/1100,1.52]]* ...
           [[1,40];[0,1]]* ...
           [[1,0];[(1-1.52)/(-1100*1.52),1/1.52]]* ...
           [[1,sz];[0,1]]* ...
           [[1,0];[0,1.52]]* ...
           [[1,65];[0,1]]* ...
           [[1,0];[(1-1.52)/(800*1.52),1/1.52]]* ...
           [[1,520-sf+590];[0,1]]* ...
           [[1,0];[(1.52-1)/(-1400),1.52]]* ...
           [[1,70];[0,1]]* ...
           [[1,0];[(1-1.52)/(1400*1.52),1/1.52]]* ...
           [[1,446+35+sf];[0,1]];
elseif dn == 3
    ABCD = [[1,1350-sz+sp];[0,1]]* ...
           [[1,0];[0,1.545]]* ...
           [[1,100];[0,1]]* ...
           [[1,0];[(1-1.545)/(900*1.545),1/1.545]]* ...
           [[1,1430-sf+660+sz+470];[0,1]]* ...
           [[1,0];[0,1.545]]* ...
           [[1,70];[0,1]]* ...
           [[1,0];[(1-1.545)/(800*1.545),1/1.545]]* ...
           [[1,sf-470];[0,1]]* ...
           [[1,0];[0,1.545]]* ...
           [[1,80];[0,1]]* ...
           [[1,0];[(1-1.545)/(800*1.545),1/1.545]]* ...
           [[1,390];[0,1]];
end

% vertical position from the reference axis (vertical center of all lens, z=0 line) at ECEI array box
zECEI = ((24:-1:1) - 12.5)*14; % [mm]
% angle against the reference axis at ECEI array box
aECEI = zeros(size(zECEI));

% z and angle at R
za = ABCD*[zECEI; aECEI];
zR = za(1,:)/1000; % [m] 
aR = za(2,:); % [rad]

% plot(R*ones(size(zR)), zR, 'x'); hold on;
% end

end